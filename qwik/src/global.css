@import "tailwindcss";


@custom-variant dark (&:where(.dark, .dark *));

@font-face {
  font-family: 'Itim';
  src: url('/font/Itim-Regular.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@theme {
  
  --font-ubuntu: "Itim", sans-serif;
}

*{
  font-family: "Itim", sans-serif;
}

.loaderCustom {
    color: #000;
    width: 4px;
    aspect-ratio: 1;
    border-radius: 50%;
    box-shadow: 19px 0 0 7px, 38px 0 0 3px, 57px 0 0 0;
    transform: translateX(-38px);
    animation: l21 .5s infinite alternate linear;
    margin: 10px 14px;
  }
  
  @keyframes l21 {
    50%  {box-shadow: 19px 0 0 3px, 38px 0 0 7px, 57px 0 0 3px}
    100% {box-shadow: 19px 0 0 0  , 38px 0 0 3px, 57px 0 0 7px}
  }

  #bee-model{
    position: fixed;
    height: 100%;
    width: 100%;
    pointer-events: none;
    z-index: 100;
    transition: transform 1s ease-out;
  }

  .getLeft{
    transform: translateX(25%);
  }



  @media (max-width: 768px){
    #bee-model{
      width: 70%;
      height: 100%;
    }

    .getLeft{
      transform: translateX(100%);
    }
  }

  .blinking-cursor {
    animation: blink 1s step-end infinite;
  }
  @keyframes blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  

/* Toast Animations */

/* Fade-in animation for the entire toast */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out forwards;
}

/* Progress bar animation (shrinks from 100% to 0%) */
@keyframes progress-bar {
  from {
    width: 100%;
  }
  to {
    width: 0%;
  }
}

.animate-progress-bar {
  /*
    IMPORTANT: Use a CSS variable for the animation duration.
    The Qwik component will set this variable dynamically.
  */
  animation: progress-bar var(--toast-duration) linear forwards;
}


/* HOME HYPNOTIC LOADER  */
/* hypnotic-loader.css */
.loader-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: #1a1a2e;
  overflow: hidden;
  position: relative;
}

.hypnotic-loader {
  position: relative;
  width: 120px;
  height: 120px;
}

.hypnotic-loader:before,
.hypnotic-loader:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 8px solid transparent;
  border-top-color: #00ffff;
  animation: hypnotic-spin 2s linear infinite;
  filter: drop-shadow(0 0 10px #00ffff)
          drop-shadow(0 0 20px #00ffffaa)
          drop-shadow(0 0 30px #00ffff55);
}

.hypnotic-loader:after {
  border-top-color: #ff00ff;
  animation-delay: 0.5s;
  filter: drop-shadow(0 0 10px #ff00ff)
          drop-shadow(0 0 20px #ff00ffaa)
          drop-shadow(0 0 30px #ff00ff55);
}

.loading-text {
  position: absolute;
  bottom: 20%;
  color: white;
  font-family: 'Arial', sans-serif;
  font-size: 18px;
  text-transform: uppercase;
  letter-spacing: 2px;
  animation: pulse 1.5s ease-in-out infinite alternate;
}

@keyframes hypnotic-spin {
  0% {
    transform: rotate(0deg);
    border-top-color: #00ffff;
    border-left-color: transparent;
  }
  50% {
    border-top-color: #ff00ff;
    border-left-color: #00ff88;
  }
  100% {
    transform: rotate(360deg);
    border-top-color: #00ffff;
    border-left-color: transparent;
  }
}

@keyframes pulse {
  0% {
    opacity: 0.6;
    text-shadow: 0 0 5px #fff;
  }
  100% {
    opacity: 1;
    text-shadow: 0 0 15px #fff, 0 0 20px #00ffff;
  }
}

/* Floating dots */
.hypnotic-loader span {
  position: absolute;
  width: 10px;
  height: 10px;
  background: #fff;
  border-radius: 50%;
  animation: float 3s infinite ease-in-out;
}

.hypnotic-loader span:nth-child(1) {
  top: 20%;
  left: 20%;
  background: #00ffff;
  animation-delay: 0s;
}

.hypnotic-loader span:nth-child(2) {
  top: 60%;
  left: 30%;
  background: #ff00ff;
  animation-delay: 0.5s;
}

.hypnotic-loader span:nth-child(3) {
  top: 40%;
  left: 70%;
  background: #00ff88;
  animation-delay: 1s;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0) translateX(0);
  }
  25% {
    transform: translateY(-20px) translateX(10px);
  }
  50% {
    transform: translateY(10px) translateX(20px);
  }
  75% {
    transform: translateY(-10px) translateX(-10px);
  }
}
